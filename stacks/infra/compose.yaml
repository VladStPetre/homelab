---
services:

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "81:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      # - "443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    env_file:
      - .env
    environment:
      TZ: 'Europe/Bucharest'
      FTLCONF_webserver_api_password: ${PIHOLE_PASS}
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: '1.1.1.1;1.0.0.1'
      PIHOLE_UID: ${UID}
      PIHOLE_GID: ${GID}
      VIRTUAL_HOST: "pihole.echo.local" # To match the domain name from traefik label
    volumes:
      - $BASE_DIR/data/pihole/etc-pihole:/etc/pihole
      - $BASE_DIR/data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
      - SYS_TIME
      - SYS_NICE
    #    dns:
    #      - 127.0.0.1
    #      - 1.1.1.1
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.echo.local`)"
      - "traefik.http.routers.pihole.entrypoints=web"
      - "traefik.http.routers.pihole.tls=false"
      - "traefik.http.services.pihole-utils.loadbalancer.server.port=80"
    restart: always
    networks:
      hlcl:
        ipv4_address: 172.21.0.109

  # uptime-kuma:
  #   image: louislam/uptime-kuma:1
  #   container_name: uptime-kuma
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - '$BASE_DIR/uptime-kuma/data:/app/data'
  #   restart: always

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    env_file:
      - .env
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ='Europe/Bucharest'
      - SERVERURL=${WG_SERVER_URL}
      - SERVERPORT=${WG_SERVER_PORT}
      - PEERS=5 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - PERSISTENTKEEPALIVE_PEERS=all #optional
      - LOG_CONFS=true #optional
    volumes:
      - $BASE_DIR/configs/wireguard:/config
      - /lib/modules:/lib/modules #optional
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    dns:
      - 192.168.7.124
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
    restart: always
    networks:
      - hlcl

  traefik:
    image: traefik:latest
    container_name: traefik
    # security_opt:
    #   - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $BASE_DIR/configs/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - $BASE_DIR/configs/traefik/certs/acme.json:/etc/traefik/certs/acme.json
      - $BASE_DIR/configs/traefik/config.yml:/etc/traefik/config.yml:ro
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.echo.local`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.tls=false"
      - "traefik.http.services.traefik-utils.loadbalancer.server.port=8080"
    restart: always
    networks:
      hlcl:
        ipv4_address: 172.21.0.102