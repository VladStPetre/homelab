---
services:

  portainer:
    image: portainer/portainer-ce:2.34.0
    command: -H unix:///var/run/docker.sock
    volumes:
      - portainer-data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      labels:
        - "portainer.io/managed=true"
        - "io.portainer.accesscontrol.users=admin"
        - "traefik.enable=true"
        - "traefik.swarm.network=hlel"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${DOMAIN_NAME}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls=true"
        - "traefik.http.routers.portainer.tls.certresolver=cloudflare"
        - "traefik.http.services.portainer-utils.loadbalancer.server.port=9000"
      update_config:
        order: start-first
    networks:
      - hlel
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -fsS http://127.0.0.1:9000/api/status >/dev/null || curl -kfsS https://127.0.0.1:9443/api/status >/dev/null" ]
#      interval: 30s
#      timeout: 5s
#      retries: 5
#      start_period: 15s


  n8n:
    image: docker.n8n.io/n8nio/n8n:1.115.0
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${TIMEZONE}
    volumes:
      - n8n-data:/home/node/.n8n
      - n8n-local-files:/files
    deploy:
      labels:
        - "portainer.io/managed=true"
        - "io.portainer.accesscontrol.users=admin"
        - "traefik.enable=true"
        - "traefik.swarm.network=hlel"
        - "traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN_NAME}`)"
        - "traefik.http.routers.n8n.entrypoints=websecure"
        - "traefik.http.routers.n8n.tls=true"
        - "traefik.http.routers.n8n.tls.certresolver=cloudflare"
        - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      update_config:
        order: start-first
    networks:
      - hlel
#    healthcheck:
#      test: [ "CMD-SHELL", "curl -fsS http://127.0.0.1:5678/healthz >/dev/null || curl -fsS http://127.0.0.1:5678/ >/dev/null" ]
#      interval: 30s
#      timeout: 5s
#      retries: 5
#      start_period: 30s

  homepage:
    image: ghcr.io/gethomepage/homepage:v1.5.0
    environment:
      - TZ=Europe/Bucharest
      - HOMEPAGE_ALLOWED_HOSTS=home.${DOMAIN_NAME}
      - HOMEPAGE_VAR_BASE_DOMAIN=${DOMAIN_NAME}
      - HOMEPAGE_VAR_NAS_ADDR=${NAS_ADDR}
      - HOMEPAGE_VAR_EXT_DOMAIN_NAME=${EXT_DOMAIN_NAME}
    configs:
      - source: homepage_settings_yaml
        target: /app/config/settings.yaml
#      - source: homepage_docker_yaml
#        target: /app/config/docker.yaml
      - source: homepage_services_yaml
        target: /app/config/services.yaml
      - source: homepage_bookmarks_yaml
        target: /app/config/bookmarks.yaml
      - source: homepage_widgets_yaml
        target: /app/config/widgets.yaml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Optional: persistent user assets (custom icons/backgrounds):
      - homepage-data:/app/config/user
    deploy:
      labels:
        - "portainer.io/managed=true"
        - "io.portainer.accesscontrol.users=admin"
        - "traefik.enable=true"
        - "traefik.swarm.network=hlel"
        - "traefik.http.routers.homepage.rule=Host(`home.${DOMAIN_NAME}`)"
        - "traefik.http.routers.homepage.entrypoints=websecure"
        - "traefik.http.routers.homepage.tls=true"
        - "traefik.http.routers.homepage.tls.certresolver=cloudflare"
        - "traefik.http.services.homepage.loadbalancer.server.port=3000"
    networks:
      - hlel

configs:
  homepage_settings_yaml:
    external: true
#  homepage_docker_yaml:
#    external: true
  homepage_services_yaml:
    external: true
  homepage_bookmarks_yaml:
    external: true
  homepage_widgets_yaml:
    external: true

volumes:
    homepage-data:
      external: true
    portainer-data: {}
    n8n-data: {}
    n8n-local-files: {}

networks:
  hlel:
    name: hlel
    external: true