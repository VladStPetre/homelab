services:

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    volumes:
      - $BASE_DIR/data/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`portainer.echo.local`)"
      - "traefik.http.routers.portainer.entrypoints=web"
      - "traefik.http.routers.portainer.tls=false"
      - "traefik.http.services.portainer-utils.loadbalancer.server.port=9000"
    restart: unless-stopped
    networks:
      - hlcl

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      # DNS Ports
      - "53:53/tcp"
      - "53:53/udp"
      # Default HTTP Port
      - "81:80/tcp"
      # Default HTTPs Port. FTL will generate a self-signed certificate
      # - "443:443/tcp"
      # Uncomment the line below if you are using Pi-hole as your DHCP server
      #- "67:67/udp"
      # Uncomment the line below if you are using Pi-hole as your NTP server
      #- "123:123/udp"
    env_file:
      - .env
    environment:
      TZ: 'Europe/Bucharest'
      FTLCONF_webserver_api_password: ${PIHOLE_PASS}
      FTLCONF_dns_listeningMode: 'all'
      FTLCONF_dns_upstreams: '1.1.1.1;1.0.0.1'
      PIHOLE_UID: ${UID}
      PIHOLE_GID: ${GID}
      VIRTUAL_HOST: "pihole.echo.local" # To match the domain name from traefik label
    volumes:
      - $BASE_DIR/data/pihole/etc-pihole:/etc/pihole
      - $BASE_DIR/data/pihole/etc-dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
      - SYS_TIME
      - SYS_NICE
    #    dns:
    #      - 127.0.0.1
    #      - 1.1.1.1
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.pihole.rule=Host(`pihole.echo.local`)"
      - "traefik.http.routers.pihole.entrypoints=web"
      - "traefik.http.routers.pihole.tls=false"
      - "traefik.http.services.pihole-utils.loadbalancer.server.port=80"
    restart: always
    networks:
      hlcl:
        ipv4_address: 172.21.0.109
  
  # uptime-kuma:
  #   image: louislam/uptime-kuma:1
  #   container_name: uptime-kuma
  #   ports:
  #     - "3001:3001"
  #   volumes:
  #     - '$BASE_DIR/uptime-kuma/data:/app/data'
  #   restart: unless-stopped

  wireguard:
    image: lscr.io/linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE #optional
    env_file:
      - .env
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ='Europe/Bucharest'
      - SERVERURL=${WG_SERVER_URL}
      - SERVERPORT=${WG_SERVER_PORT}
      - PEERS=5 #optional
      - PEERDNS=auto #optional
      - INTERNAL_SUBNET=10.13.13.0 #optional
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - PERSISTENTKEEPALIVE_PEERS=all #optional
      - LOG_CONFS=true #optional
    volumes:
      - $BASE_DIR/configs/wireguard:/config
      - /lib/modules:/lib/modules #optional
    ports:
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    dns:
      - 192.168.7.124
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
    restart: always
    networks:
      - hlcl

  traefik:
    image: traefik:latest
    container_name: traefik
    # security_opt:
    #   - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - $BASE_DIR/configs/traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - $BASE_DIR/configs/traefik/certs/acme.json:/etc/traefik/certs/acme.json
      - $BASE_DIR/configs/traefik/config.yml:/etc/traefik/config.yml:ro
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.echo.local`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.tls=false"
      - "traefik.http.services.traefik-utils.loadbalancer.server.port=8080"
    restart: always
    networks:
      hlcl:
        ipv4_address: 172.21.0.102

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: ${UID}
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
    volumes:
      - $BASE_DIR/data/grafana:/var/lib/grafana
    # environment:
    #   GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-piechart-panel"
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.echo.local`)"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.tls=false"
    networks:
      - hlcl

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
    networks:
      - hlcl

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    user: root
    volumes:
      - $BASE_DIR/configs/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - $BASE_DIR/data/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.echo.local`)"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.tls=false"
    networks:
      - hlcl


  duplicati:
    image: lscr.io/linuxserver/duplicati:latest
    container_name: duplicati
    environment:
      - PUID=${UID}
      - PGID=${GID}
      - TZ='Europe/Bucharest'
      - SETTINGS_ENCRYPTION_KEY=${DUPLICATI_ENCRYPTION_KEY}
      - DUPLICATI__WEBSERVICE_PASSWORD=${DUPLICATI_WEB_PASS}
      - CLI_ARGS=--webservice-interface=any
    volumes:
      - $BASE_DIR/configs/duplicati:/config                      # Duplicati configs
      - $BASE_DIR/configs:/source/configs:ro
      - $BASE_DIR/data:/source/data:ro
      - $BASE_DIR/data/backups:/backups                          # Backup destination (local disk or mount)
    ports:
      - 8200:8200
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
    restart: unless-stopped
    networks:
      - hlcl


  n8n:
    image: docker.n8n.io/n8nio/n8n
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    env_file:
      - .env
    labels:
      - "portainer.io/managed=true"
      - "io.portainer.accesscontrol.users=admin"
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`n8n.echo.local`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.routers.n8n.tls=false"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    environment:
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=Europe/Bucharest
    volumes:
      - $BASE_DIR/data/n8n:/home/node/.n8n
      - $BASE_DIR/data/n8n/local-files:/files
    networks:
      - hlcl


      # cadvisor:
      #   image: gcr.io/cadvisor/cadvisor:v0.47.2
      #   container_name: cadvisor
      #   ports:
      #   - 8181:8080
      #   volumes:
      #   - /:/rootfs:ro
      #   - /var/run:/var/run:rw
      #   - /sys:/sys:ro
      #   - /var/lib/docker/:/var/lib/docker:ro
      #   command:
      #   - "--docker_only=true"
      #   - "--housekeeping_interval=30s"
      #   - "--disable_metrics=accelerator,cpu_topology,disk,memory_numa,tcp,udp,percpu,sched,process,hugetlb,referenced_memory,resctrl,cpuset,advtcp"
      # labels:
      # - "portainer.io/managed=true"
      # - "io.portainer.accesscontrol.users=admin"
      # networks:
      # - hlcl

networks:
  hlcl:
    name: hlcl
    external: true